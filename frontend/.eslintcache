[{"/mnt/c/Users/Chris/Desktop/statify/frontend/src/index.js":"1","/mnt/c/Users/Chris/Desktop/statify/frontend/src/reportWebVitals.js":"2","/mnt/c/Users/Chris/Desktop/statify/frontend/src/App.js":"3","/mnt/c/Users/Chris/Desktop/statify/frontend/src/util/spotify_api_util.js":"4","/mnt/c/Users/Chris/Desktop/statify/frontend/src/actions/spotify_actions.js":"5","/mnt/c/Users/Chris/Desktop/statify/frontend/src/store/store.js":"6","/mnt/c/Users/Chris/Desktop/statify/frontend/src/reducers/root_reducer.js":"7","/mnt/c/Users/Chris/Desktop/statify/frontend/src/reducers/spotify_reducer.js":"8","/mnt/c/Users/Chris/Desktop/statify/frontend/src/reducers/session_reducer.js":"9","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/dataSelector/dataSelector.jsx":"10","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/graph/graph_container.js":"11","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/graph/graph.jsx":"12","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/dataSelector/dataSelector_container.js":"13","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/splash/splash.jsx":"14"},{"size":864,"mtime":1608764948857,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1608064614237,"results":"17","hashOfConfig":"16"},{"size":2341,"mtime":1610045685754,"results":"18","hashOfConfig":"16"},{"size":120,"mtime":1608661783740,"results":"19","hashOfConfig":"16"},{"size":2891,"mtime":1610055306797,"results":"20","hashOfConfig":"16"},{"size":528,"mtime":1608764948918,"results":"21","hashOfConfig":"16"},{"size":224,"mtime":1608764948878,"results":"22","hashOfConfig":"16"},{"size":688,"mtime":1610046580033,"results":"23","hashOfConfig":"16"},{"size":409,"mtime":1609963391317,"results":"24","hashOfConfig":"16"},{"size":2777,"mtime":1610048376079,"results":"25","hashOfConfig":"16"},{"size":200,"mtime":1610046788132,"results":"26","hashOfConfig":"16"},{"size":6045,"mtime":1610057200307,"results":"27","hashOfConfig":"16"},{"size":721,"mtime":1610047895564,"results":"28","hashOfConfig":"16"},{"size":241,"mtime":1609963120564,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fi5a70",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/mnt/c/Users/Chris/Desktop/statify/frontend/src/index.js",[],["66","67"],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/reportWebVitals.js",[],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/App.js",["68"],"import React from 'react';\nimport spotifyApi from '../src/util/spotify_api_util';\nimport {setAccessToken, logout} from '../src/actions/spotify_actions'\nimport {connect} from 'react-redux';\nimport DataSelector from '../src/components/dataSelector/dataSelector_container'\nimport Graph from '../src/components/graph/graph_container';\nimport Axios from 'axios';\nimport Splash from './components/splash/splash';\n\nconst mSTP = state => {\n  return ({\n    loggedIn: state.session.isAuthenticated\n  })\n}\n\nconst mDTP = dispatch => {\n\n  return ({\n  setAccessToken: accessToken => dispatch(setAccessToken(accessToken)),\n  logout: () => dispatch(logout())\n})\n}\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    const params = this.getHashParams();\n    const token = params.access_token\n    console.log(params.refresh_token) // <-\n    if(token){\n      this.props.setAccessToken(token)\n    }\n\n\n    this.state = {\n      params: params,\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' },\n      recentlyPlayed: [],\n      topTracks: [],\n      features: {}\n    }\n    \n    this.startCycle = this.startCycle.bind(this)\n    window.state = this.state;\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n    q = window.location.hash.substring(2);\n    \n    e = r.exec(q)\n    while ( e ) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    \n    console.log(hashParams)\n    return hashParams;\n  }\n\n\n  startCycle () {\n    const refresh = this.state.params.refresh_token;\n    const setAuthToken = this.props.setAccessToken;\n    setTimeout(() => {\n      Axios.get('http://localhost:8000/refresh_token', {\n        params: {\n          refresh_token: refresh\n        }\n      }).then(function ({data}) {\n        debugger\n        setAuthToken(data.access_token)\n      }).catch(err => console.log(err));\n      \n    }, 1000)\n      \n  }\n    \n\n  \n\n  \n  render() {\n    \n    if (!this.props.loggedIn) return <Splash/>\n\n\n\n    return (\n      <div className=\"App\">\n\n        <button onClick={() => this.props.logout()}> Logout</button>      \n        <button onClick={() => this.startCycle()}> Start Refresh Cycle</button>      \n        <DataSelector />\n        <Graph/>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(mSTP, mDTP)(App)\n\n","/mnt/c/Users/Chris/Desktop/statify/frontend/src/util/spotify_api_util.js",[],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/actions/spotify_actions.js",["69"],"\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport spotifyApi from '../util/spotify_api_util'\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const RECEIVE_TRACKS = \"RECEIVE_TRACKS\";\r\nexport const RECEIVE_PLAYLISTS = \"RECEIVE_PLAYLISTS\";\r\nexport const RECEIVE_FEATURES = \"RECEIVE_FEATURES\";\r\nexport const RECCEIVE_TRACKS = \"RECCEIVE_TRACKS\";\r\n\r\n\r\nexport const login = accessToken => {\r\n    return ({\r\n    type: LOGIN,\r\n    accessToken\r\n})};\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT,\r\n})\r\n\r\nexport const receiveFeatures = features => {\r\n    return ({\r\n    type: RECEIVE_FEATURES,\r\n    features\r\n})};\r\n\r\nexport const receivePlaylists = playlists => {\r\n    return ({\r\n    type: RECEIVE_PLAYLISTS,\r\n    playlists\r\n})};\r\n\r\nexport const receiveTracks = tracks => {\r\n    return ({\r\n    type: RECEIVE_TRACKS,\r\n    tracks\r\n})};\r\n\r\nexport const setAccessToken = accessToken => dispatch => {\r\n    spotifyApi.setAccessToken(accessToken)\r\n    \r\n    dispatch(login(accessToken))\r\n}\r\n\r\nexport const requestPlaylists = () => dispatch => {\r\n  spotifyApi.getUserPlaylists({limit: 50})\r\n    .then(res => {\r\n      let playlists = {}\r\n      res.items.forEach(x => {\r\n        playlists[x.name] = x.id\r\n      })\r\n      dispatch(receivePlaylists(playlists))\r\n    })\r\n}\r\n\r\n\r\nexport const requestTopTracks = timeRange => dispatch => {\r\n    spotifyApi.getMyTopTracks({limit: 50, time_range: timeRange})\r\n      .then(res => {\r\n        dispatch(receiveTracks(res.items));\r\n        let trackIds = [];\r\n        res.items.forEach(item => {\r\n            trackIds.push(item.id)\r\n        });\r\n        dispatch(requestFeatures(trackIds))\r\n      });\r\n}\r\n\r\nexport const requestPlaylistItems = playlistId => dispatch => {\r\n  spotifyApi.getPlaylistTracks(playlistId)\r\n    .then(res => {\r\n      dispatch(receiveTracks(res.items));\r\n      let trackIds = [];\r\n      res.items.forEach(item => {\r\n          trackIds.push(item.track.id)\r\n      });\r\n      dispatch(requestFeatures(trackIds))\r\n    });\r\n}\r\n\r\nexport const requestMostRecent = () => dispatch => {\r\n    spotifyApi.getMyRecentlyPlayedTracks({limit: 50})\r\n      .then(res => {\r\n        dispatch(receiveTracks(res.items));\r\n        let trackIds = [];\r\n        res.items.forEach(item => {\r\n            trackIds.push(item.track.id)\r\n        });\r\n        dispatch(requestFeatures(trackIds))\r\n      })\r\n};\r\n\r\nexport const requestMySaved = () => dispatch => {\r\n    spotifyApi.getMySavedTracks({limit: 50})\r\n      .then(res => {\r\n        dispatch(receiveTracks(res.items));\r\n        let trackIds = [];\r\n        res.items.forEach(item => {\r\n            trackIds.push(item.track.id)\r\n        });\r\n        dispatch(requestFeatures(trackIds))\r\n      })\r\n};\r\n\r\n\r\n\r\nconst requestFeatures = trackIds => dispatch => {\r\n    spotifyApi.getAudioFeaturesForTracks(trackIds)\r\n      .then(res => {\r\n        dispatch(receiveFeatures(res.audio_features))})\r\n}","/mnt/c/Users/Chris/Desktop/statify/frontend/src/store/store.js",[],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/reducers/root_reducer.js",[],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/reducers/spotify_reducer.js",["70"],"import {RECEIVE_FEATURES, RECEIVE_PLAYLISTS, RECEIVE_TRACKS} from '../actions/spotify_actions'\r\n\r\nconst initialState = {\r\n    features: [],\r\n    tracks: {},\r\n    playlists: {}\r\n    };\r\n\r\nexport default (state = initialState, action) => {\r\n    let newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case RECEIVE_FEATURES:\r\n            newState.features = action.features\r\n            return newState;\r\n        case RECEIVE_TRACKS:\r\n            newState.tracks = action.tracks\r\n            return newState;\r\n        case RECEIVE_PLAYLISTS:\r\n        newState.playlists = action.playlists\r\n        return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}","/mnt/c/Users/Chris/Desktop/statify/frontend/src/reducers/session_reducer.js",["71"],"\r\nimport { LOGIN, LOGOUT } from '../actions/spotify_actions';\r\n\r\nconst initialState = {\r\nisAuthenticated: false,\r\naccessToken: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\nswitch (action.type) {\r\n  case LOGIN:\r\n    return {\r\n      isAuthenticated: true,\r\n      accessToken: action.accessToken\r\n    }\r\n  \r\n    case LOGOUT:\r\n      return initialState\r\n\r\n  default:\r\n    return state;\r\n}\r\n}","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/dataSelector/dataSelector.jsx",["72","73"],"import React from 'react';\r\nimport spotifyApi from '../../util/spotify_api_util'\r\nimport Graph from '../graph/graph_container';\r\n\r\nexport default class DataSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: 'recent',\r\n            time: 'medium_term'\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.requestPlaylists()\r\n    }\r\n\r\n    dataChange (e) {\r\n        this.setState({data: e.target.value})\r\n    }\r\n    timeChange (e) {\r\n        this.setState({time: e.target.value})\r\n    }\r\n\r\n    getData () {\r\n        switch (this.state.data) {\r\n            case 'recent':\r\n                console.log('looking for recent data')\r\n                this.props.requestMostRecent(this.state.time)\r\n                \r\n                break;\r\n            case 'top':\r\n                console.log('looking for top data')\r\n                this.props.requestTopTracks(this.state.time)\r\n                break;\r\n            case 'liked':\r\n                console.log('looking for liked data')\r\n                this.props.requestMySaved(this.state.time)\r\n                break;\r\n        \r\n            default:\r\n                this.props.requestPlaylistItems(this.state.data)\r\n                break;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        this.getData()\r\n\r\n        const playlistOptions = Object.keys(this.props.playlists).map((k) => (\r\n            <option value={this.props.playlists[k]}>{k}</option>\r\n        ))\r\n        return (\r\n            <>\r\n            <div className='dataSelector'> \r\n                <p>Based on your</p>\r\n               \r\n                <select onChange={this.dataChange.bind(this)} value={this.state.data}>\r\n                    <option value=\"top\">Top Tracks</option>\r\n                    <option value=\"recent\">Most Recent Tracks</option>\r\n                    <option value=\"liked\">Liked Tracks</option>\r\n                    <option value=\"playlist\" disabled>— Playlists —</option>\r\n                    {playlistOptions}\r\n                </select>\r\n                {this.state.data.length > 9 ? (\r\n                    <p>playlist</p>\r\n                ) : null }\r\n                {this.state.data === 'top' ? (\r\n                    <>\r\n                    <p>from the past </p>\r\n                    <select onChange={this.timeChange.bind(this)} value={this.state.time}>\r\n                    <option value=\"short_term\">4 weeks</option>\r\n                    <option value=\"medium_term\">6 months</option>\r\n                    <option value=\"long_term\">All time</option>\r\n                    </select>\r\n                    </>\r\n                ) : null}\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/graph/graph_container.js",[],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/graph/graph.jsx",["74","75","76","77","78","79","80","81","82"],"import React from 'react';\r\nimport { Doughnut, Bar } from 'react-chartjs-2';\r\n \r\nexport default class Graph extends React.Component {\r\n    \r\n\r\n    \r\n\r\n    render ()  {\r\n        if (!this.props.data) return null;\r\n\r\n\r\n        let keys = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n        const keyArr = ['C','Db','D','Eb','E','F','Gb','G','Ab','A','Bb','B',];\r\n        let modes = [0,0];\r\n        let tempos = {};\r\n        for (let i = 40; i < 241; i += 10) tempos[i] = 0;\r\n\r\n\r\n        //\r\n        let acousticness = []\r\n        let danceability = []\r\n        let energy = []\r\n        let instrumentalness = []\r\n        let liveness = []\r\n        let speechiness = []\r\n        let valence = []\r\n\r\n\r\n        let loudness = [] //roughly -30 to 0\r\n        let duaration = [] //in ms\r\n\r\n\r\n        //main iterator\r\n        this.props.data.forEach(x => {\r\n            if (!x) {\r\n            } else {\r\n                keys[x.key] += 1;\r\n                modes[x.mode] += 1;\r\n                let tempo = Math.floor(x.tempo);\r\n                tempo -= (tempo % 10)\r\n                tempos[tempo] += 1\r\n            }\r\n        });\r\n\r\n        //graph datasets\r\n        const keyData = {\r\n            labels: keyArr,\r\n            datasets: [{\r\n                data: keys,\r\n                backgroundColor: [\r\n                    '#e6194B',\r\n                    '#f58231',\r\n                    '#ffe119',\r\n                    '#bfef45',\r\n                    '#3cb44b',\r\n                    '#469990',\r\n                    '#42d4f4',\r\n                    '#4363d8',\r\n                    '#000075',\r\n                    '#911eb4',\r\n                    '#f032e6',\r\n                    '#b20035',\r\n                  ],\r\n            }]\r\n        };\r\n\r\n        const modeData = {\r\n            labels: ['Major', 'Minor'],\r\n            datasets: [{\r\n                data: modes,\r\n                backgroundColor: [\r\n                    '#e6194B',\r\n                    '#4363d8',\r\n                ]\r\n            }]\r\n        };\r\n        \r\n        var canvas = document.createElement('canvas');\r\n        var context = canvas.getContext('2d')\r\n        canvas.width = 300;\r\n        canvas.height = 300;\r\n        var gradient = context.createLinearGradient(0, 0, 300, 0);\r\n        gradient.addColorStop(0, \"rgb(0, 77, 255)\");\r\n        gradient.addColorStop(0.5505050505050505, \"rgb(114, 255, 86)\");\r\n        gradient.addColorStop(1, \"rgb(255, 20, 20)\");\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, 300, 300);\r\n\r\n\r\n        const tempoData = {\r\n            labels: [40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220],\r\n            datasets: [{\r\n                data: Object.values(tempos),\r\n                backgroundColor: gradient\r\n            }]\r\n        };\r\n\r\n        //graph option objects\r\n        const modeOptions = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        suggestedMax: 10\r\n                    }\r\n                }]\r\n            },\r\n            responsive: false,\r\n            maintainAspectRatio: true,\r\n            legend: {\r\n                display: false   \r\n                }\r\n        };\r\n\r\n        const tempoOptions = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        suggestedMax: 10\r\n                    }\r\n                }]\r\n            },\r\n            responsive: false,\r\n            maintainAspectRatio: true,\r\n            legend: {\r\n                display: false   \r\n                }\r\n        };\r\n        \r\n\r\n        //get average modes\r\n        const findIndexOfGreatest = (array) => {\r\n            var greatest;\r\n            var indexOfGreatest;\r\n            for (var i = 0; i < array.length; i++) {\r\n              if (!greatest || array[i] > greatest) {\r\n                greatest = array[i];\r\n                indexOfGreatest = i;\r\n              }\r\n            }\r\n            return indexOfGreatest;\r\n          }\r\n\r\n        const favKeyIndex = findIndexOfGreatest(keys)\r\n        const favKey = keyArr[favKeyIndex]\r\n        let faveMode\r\n        if (modes[0] === modes[1]){\r\n            faveMode= 'You like Major and Minor Keys equally '\r\n        } else if (modes[0] < modes[1]) {\r\n            faveMode= 'You prefer Minor Keys'\r\n        } else {\r\n            faveMode= 'You prefer Major Keys'\r\n        }\r\n        const favTempo = Object.keys(tempos).reduce((a, b)=>{ return tempos[a] > tempos[b] ? a : b });\r\n        let speed;\r\n        if (favTempo < 71) {\r\n            speed = 'slow';\r\n        } else if (favTempo < 121) {\r\n            speed = 'walking pace';\r\n        } else if (favTempo < 180) {\r\n            speed = 'fast';\r\n        } else {\r\n            speed = 'very fast';\r\n        }\r\n\r\n        return (\r\n            <>\r\n        <div className='graphContainer'>\r\n            <div id=\"donut\">\r\n                <p>Your favorite songs are in the key of {favKey}</p>\r\n            <Doughnut\r\n                data={keyData}\r\n                height={400}\r\n                width={400}\r\n                options={{ maintainAspectRatio: true,\r\n                responsive: false,\r\n                \r\n                 legend: {\r\n                 display: false   \r\n                 }\r\n                }}\r\n                />\r\n            </div>\r\n            <div id='modeChart'>\r\n                {faveMode}\r\n                <Bar\r\n                height={400}\r\n                width={400}\r\n                    data={modeData}\r\n                    options={modeOptions}\r\n                    />\r\n\r\n            </div>\r\n            <div id='tempoChart'>\r\n                <p>You prefer {speed} music ({favTempo} bpm)</p>\r\n                <Bar\r\n                height={400}\r\n                width={400}\r\n                    data={tempoData}\r\n                    options={tempoOptions}\r\n                    />\r\n\r\n            </div>\r\n            <br/>\r\n\r\n\r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n","/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/dataSelector/dataSelector_container.js",[],"/mnt/c/Users/Chris/Desktop/statify/frontend/src/components/splash/splash.jsx",["83"],"import React from 'react';\r\n\r\n\r\nexport default () => (\r\n    <>\r\n        <h1>Statify</h1>\r\n        <h2>View and compare stats about your musical taste</h2>\r\n        <a href='http://localhost:8000/login' > Login to Spotify </a>\r\n\r\n\r\n    </>\r\n)",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":9,"column":1,"nodeType":"95","endLine":24,"endColumn":2},{"ruleId":"93","severity":1,"message":"96","line":9,"column":1,"nodeType":"95","endLine":23,"endColumn":2},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"97","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"98","line":21,"column":13,"nodeType":"90","messageId":"91","endLine":21,"endColumn":25},{"ruleId":"88","severity":1,"message":"99","line":22,"column":13,"nodeType":"90","messageId":"91","endLine":22,"endColumn":25},{"ruleId":"88","severity":1,"message":"100","line":23,"column":13,"nodeType":"90","messageId":"91","endLine":23,"endColumn":19},{"ruleId":"88","severity":1,"message":"101","line":24,"column":13,"nodeType":"90","messageId":"91","endLine":24,"endColumn":29},{"ruleId":"88","severity":1,"message":"102","line":25,"column":13,"nodeType":"90","messageId":"91","endLine":25,"endColumn":21},{"ruleId":"88","severity":1,"message":"103","line":26,"column":13,"nodeType":"90","messageId":"91","endLine":26,"endColumn":24},{"ruleId":"88","severity":1,"message":"104","line":27,"column":13,"nodeType":"90","messageId":"91","endLine":27,"endColumn":20},{"ruleId":"88","severity":1,"message":"105","line":30,"column":13,"nodeType":"90","messageId":"91","endLine":30,"endColumn":21},{"ruleId":"88","severity":1,"message":"106","line":31,"column":13,"nodeType":"90","messageId":"91","endLine":31,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":4,"column":1,"nodeType":"95","endLine":12,"endColumn":2},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'spotifyApi' is defined but never used.","Identifier","unusedVar","'SpotifyWebApi' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'Graph' is defined but never used.","'acousticness' is assigned a value but never used.","'danceability' is assigned a value but never used.","'energy' is assigned a value but never used.","'instrumentalness' is assigned a value but never used.","'liveness' is assigned a value but never used.","'speechiness' is assigned a value but never used.","'valence' is assigned a value but never used.","'loudness' is assigned a value but never used.","'duaration' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]