[{"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/index.js":"1","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reportWebVitals.js":"2","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/App.js":"3","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/store/store.js":"4","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/util/spotify_api_util.js":"5","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/dataSelector/dataSelector_container.js":"6","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/tracks/track_component.js":"7","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/actions/spotify_actions.js":"8","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reducers/root_reducer.js":"9","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/graph_container.js":"10","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/splash/splash.jsx":"11","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reducers/session_reducer.js":"12","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reducers/spotify_reducer.js":"13","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/tracks/tracks.jsx":"14","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/dataSelector/dataSelector.jsx":"15","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/graph.jsx":"16","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/dynoGraph.jsx":"17","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/dynoText.js":"18","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/tracks/single_track_data.jsx":"19","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/search/search.jsx":"20"},{"size":841,"mtime":1611261795320,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607965629516,"results":"23","hashOfConfig":"22"},{"size":5756,"mtime":1616178009045,"results":"24","hashOfConfig":"22"},{"size":532,"mtime":1611261795323,"results":"25","hashOfConfig":"22"},{"size":120,"mtime":1608862704950,"results":"26","hashOfConfig":"22"},{"size":721,"mtime":1610054025350,"results":"27","hashOfConfig":"22"},{"size":217,"mtime":1615311061117,"results":"28","hashOfConfig":"22"},{"size":4267,"mtime":1615311160806,"results":"29","hashOfConfig":"22"},{"size":224,"mtime":1608862704950,"results":"30","hashOfConfig":"22"},{"size":200,"mtime":1608862704949,"results":"31","hashOfConfig":"22"},{"size":639,"mtime":1611261795317,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1610477814340,"results":"33","hashOfConfig":"22"},{"size":688,"mtime":1611261795323,"results":"34","hashOfConfig":"22"},{"size":3523,"mtime":1616178009047,"results":"35","hashOfConfig":"22"},{"size":2539,"mtime":1615311061114,"results":"36","hashOfConfig":"22"},{"size":7381,"mtime":1615311160818,"results":"37","hashOfConfig":"22"},{"size":3442,"mtime":1615311061115,"results":"38","hashOfConfig":"22"},{"size":2885,"mtime":1610477814338,"results":"39","hashOfConfig":"22"},{"size":3133,"mtime":1611950898273,"results":"40","hashOfConfig":"22"},{"size":5009,"mtime":1615311160808,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13dfb10",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/index.js",[],["91","92"],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reportWebVitals.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/App.js",["93","94","95","96","97","98","99","100","101"],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/store/store.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/util/spotify_api_util.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/dataSelector/dataSelector_container.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/tracks/track_component.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/actions/spotify_actions.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reducers/root_reducer.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/graph_container.js",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/splash/splash.jsx",["102","103"],"import React from 'react';\r\nimport logo from './soundeq.png'\r\n\r\n\r\nexport default ({message}) => {\r\n    return (\r\n    <div className='splash'>\r\n        <h1>Statify</h1>\r\n        <h2>View and compare stats about your musical taste</h2>\r\n\r\n        { process.env.NODE_ENV === 'production' ? \r\n        (\r\n            <a href='https://statifymusic.herokuapp.com/login' > Login to Spotify </a>\r\n            ):(\r\n                <a href='http://localhost:8000/login' > Login to Spotify </a>\r\n                )\r\n            }\r\n            <img src={logo} className='splashimg'/>\r\n    <p>\r\n        {message}\r\n        </p>\r\n    \r\n    \r\n    </div>\r\n)}","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reducers/session_reducer.js",["104"],"\r\nimport { LOGIN, LOGOUT, RECEIVE_USER_DATA } from '../actions/spotify_actions';\r\n\r\nconst initialState = {\r\nisAuthenticated: false,\r\naccessToken: {},\r\nusername: '',\r\nprofpic: '',\r\nerrors: ''\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\nswitch (action.type) {\r\n  case LOGIN:\r\n    return {\r\n      isAuthenticated: true,\r\n      accessToken: action.accessToken\r\n    }\r\n  case RECEIVE_USER_DATA:\r\n    return Object.assign({}, state, action.userData)\r\n  \r\n    case LOGOUT:\r\n      initialState.errors = action.message;\r\n      return initialState;\r\n\r\n  default:\r\n    return state;\r\n}\r\n}","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/reducers/spotify_reducer.js",["105"],"import {RECEIVE_FEATURES, RECEIVE_PLAYLISTS, RECEIVE_TRACKS} from '../actions/spotify_actions'\r\n\r\nconst initialState = {\r\n    features: [],\r\n    tracks: [],\r\n    playlists: {}\r\n    };\r\n\r\nexport default (state = initialState, action) => {\r\n    let newState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case RECEIVE_FEATURES:\r\n            newState.features = action.features\r\n            return newState;\r\n        case RECEIVE_TRACKS:\r\n            newState.tracks = action.tracks\r\n            return newState;\r\n        case RECEIVE_PLAYLISTS:\r\n        newState.playlists = action.playlists\r\n        return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/tracks/tracks.jsx",["106","107","108","109","110"],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/dataSelector/dataSelector.jsx",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/graph.jsx",[],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/dynoGraph.jsx",["111"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport dynoDescriptions from './dynoText';\r\n\r\n\r\nexport default ({dynoData}) => {\r\n\r\n    const [dyno, setDyno] = useState('popularity')\r\n    \r\n\r\n    const tracks = useSelector(state => state.entities.tracks)\r\n\r\n    const oneFive = n => {  //16\r\n        n -= (n % 5)  //15\r\n        return (n / 5); //3\r\n    }\r\n\r\n    const labels = []\r\n    for (let i = 0; i < 100; i += 5){\r\n        labels.push(i / 100)\r\n    }\r\n\r\n    const avg = arr => {\r\n        let ans =  0;\r\n        let c = 0\r\n        arr.forEach((x,i) => {\r\n            ans += labels[i] * x;\r\n            c += x\r\n        });\r\n        ans /= c;\r\n        return Math.floor(ans * 100) / 100\r\n    }\r\n    \r\n    const popularity = new Array(20).fill(0);\r\n    \r\n\r\n    if (tracks[0])\r\n        tracks.forEach(item => {\r\n            popularity[oneFive(item.popularity)]++;\r\n        });\r\n        dynoData['popularity'] = popularity;\r\n\r\n    window.tracks = tracks\r\n    window.dynoData = dynoData\r\n    useEffect(() => {\r\n        const selector = document.getElementById('selectDyno')\r\n        selector.childNodes.forEach(button => {\r\n            if (button.value === dyno) button.className = button.value + ' selected'\r\n            else button.className = button.value    \r\n        });\r\n    });\r\n\r\n    \r\n    const currentData = {\r\n        labels,\r\n        datasets: [{\r\n            data: dynoData[dyno],\r\n            backgroundColor: '#ED45A7',\r\n        }]\r\n    };\r\n    const dynoOptions = {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    suggestedMax: 10\r\n                },\r\n                gridLines: {\r\n                    color: \"#969696\"\r\n                }\r\n            }]\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false   \r\n            }\r\n    };\r\n    window.dynoData = dynoData\r\n    window.dyno = dyno\r\n    return (\r\n        <div className='dynoParent'>\r\n            \r\n        <div id='selectDyno'>\r\n            <button value='acousticness' onClick={() => setDyno('acousticness')}>Acousticness</button>\r\n            <button value='danceability' onClick={() => setDyno('danceability')}>Danceability</button>\r\n            <button value='energy' onClick={() => setDyno('energy')}>Energy</button>\r\n            <button value='instrumentalness' onClick={() => setDyno('instrumentalness')}>Instrumentalness</button>\r\n            <button value='liveness' onClick={() => setDyno('liveness')}>Liveness</button>\r\n            <button value='speechiness' onClick={() => setDyno('speechiness')}>Speechiness</button>\r\n            <button value='valence' onClick={() => setDyno('valence')}>Valence</button>\r\n            <button value='popularity' onClick={() => setDyno('popularity')}>Popularity</button>\r\n        </div>\r\n        <div className=\"centerDyno\">\r\n        <div className='dynoGraph'>\r\n        <Bar \r\n        data={currentData}\r\n        options={dynoOptions}\r\n        // height={400}\r\n        // width={700}\r\n        ></Bar>\r\n\r\n        </div>\r\n        <div className='dynoText'>\r\n            <p id=\"average\">Average {dyno}: {avg(dynoData[dyno])}</p>\r\n            <p className='descriptions'>\r\n                {dynoDescriptions(dyno)}\r\n            </p>\r\n\r\n        </div>\r\n       </div>\r\n        </div>\r\n    )\r\n}","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/graph/dynoText.js",["112"],"export default selected => {\r\n    const descriptions = {\r\n        'acousticness': 'A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.',\r\n        'danceability': '\tDanceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.',\r\n        'energy': '\tEnergy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.',\r\n        'instrumentalness': '\tPredicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.',\r\n        'liveness': '\tDetects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.',\r\n        'speechiness': '\tSpeechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.',\r\n        'valence': '\tA measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).',\r\n        'popularity': 'The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. ',\r\n    };\r\n\r\n    return descriptions[selected]\r\n}",["113","114"],"/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/tracks/single_track_data.jsx",["115","116"],"import { Radar } from 'react-chartjs-2'\n\n\nexport default ({track, trackFeatures}) => {\n    if (track == undefined){\n        return null\n    }\n\n    if(track.type === 'episode'){\n        \n        return (\n            <h1 className=\"episode\">\n                Sorry, this is not a song...\n            </h1>\n        )\n    }\n    if(track.type === 'track'){\n        if (trackFeatures === undefined || trackFeatures === null){\n        return null\n        }\n    }\n    const keyArr = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B',];\n    const modes = ['Maj', 'Min']\n    const albumArtUrl = track.album.images[0].url\n    \n    const trackData = [track.popularity / 10, \n        trackFeatures.liveness * 10, \n        trackFeatures.energy * 10, \n        trackFeatures.valence * 10, \n        trackFeatures.danceability * 10, \n        trackFeatures.instrumentalness * 10]\n        \n    const data = {\n        labels: ['Popularity', 'Liveness', 'Energy', 'Valence', 'Danceability', 'Instrumentalness'],\n        datasets: [\n            {\n                label: '1 to 10',\n                data: trackData,\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n                borderWidth: 1,\n                \n             \n            },\n        ],\n    }\n\n    const options = {\n        scale: {\n            ticks: { beginAtZero: true, stepSize: 1},\n            labels: {fontSize: 20},\n            gridLines: { color: 'rgba(250, 250, 250, .6)', lineWidth:2, drawBorder: true, drawOnChartArea: true, drawTicks: true},\n            pointLabels: { fontSize: 20, fontColor: 'white'},\n            angleLines: { color: 'rgba(250, 250, 250, .6)', }\n        },\n        \n        \n    }\n    const openInNewTab = (url) => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n    return (\n        <div className=\"dynoTrack-container\">\n            <div className=\"album-info\">\n                \n                <div className=\"album-art-div\" onClick={() => openInNewTab(track.external_urls.spotify)}>\n                    <img src={albumArtUrl} alt=\"album\" className=\"dyno-albumart\"/>\n                    <p className=\"album-name-sm\"><b>{track.album.name}</b> \n                    <br/>\n                    by {track.artists[0].name}\n                    </p>\n                   \n                </div>\n                \n                <div className=\"album-data-div\">\n                    <h2>\"{track.name}\"</h2>\n                    <p>\n                        Tempo: {Math.floor(trackFeatures.tempo)} BPM\n                        <br/>\n                        Key: {keyArr[trackFeatures.key]} {modes[trackFeatures.mode]} \n                        <br/>\n                        Beats Per Bar: {trackFeatures.time_signature}\n                    </p>\n                    \n                    \n                </div>\n\n            </div>\n            <div >\n                <div className=\"radar\">\n\n                <Radar data={data} options={options} />\n                </div>\n\n            </div>\n        </div>\n    )\n\n}","/Users/michaelwideburg/Desktop/spotify_app/statify/frontend/src/components/search/search.jsx",["117","118","119","120"],"import React from 'react'\nimport spotifyApi from '../../util/spotify_api_util'\nimport SingleTrackData from '../tracks/single_track_data'\nexport default class Search extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            search: '',\n            tracks: [],\n            features: [],\n            artists: [],\n            selectedTrack: undefined,\n            selectedFeatures: undefined\n        }\n        this.updateForm = this.updateForm.bind(this)\n        this.submitSearch = this.submitSearch.bind(this)\n\n    }\n    componentDidUpdate(prevState, snapshot) {\n        \n        if (snapshot.tracks[0] != this.state.tracks[0] || snapshot.selectedTrack != this.state.selectedTrack ) {\n            window.scroll({ top: 2800, behavior: 'smooth' })\n        }\n    }\n\n    updateForm(){\n        \n        return e => this.setState({search: e.target.value})\n        // this.setState({search: str, type: type})\n    }\n\n    submitSearch(e){\n        \n        e.preventDefault()\n        \n        if(this.state.search != ''){\n            spotifyApi.searchTracks(this.state.search).then(obj => {\n                const trackIds = obj.tracks.items.map(ele => ele.id)\n                const tracks = obj.tracks.items\n                \n                spotifyApi.getAudioFeaturesForTracks(trackIds)\n                    .then(res => {\n                        \n                        this.setState({ features: res.audio_features, tracks, selectedTrack : undefined, selectedFeatures: undefined })\n                        window.scroll({ top: 2200, behavior: 'smooth' })\n                    })\n                \n                \n            })\n        }\n    }\n\n    propagateTrackData(track, features, id) {\n        \n        if(this.state.selectedTrack === undefined){\n            const addClassEle = document.getElementById(id)\n            addClassEle.classList.add('selected-track')\n          \n        }else{\n            const lastEle = this.state.selectedTrack.id\n            debugger\n            const removeClassEle = document.getElementById(lastEle)\n            const addClassEle = document.getElementById(id)\n\n            removeClassEle.classList.remove('selected-track')\n            addClassEle.classList.add('selected-track')\n            \n        }\n       \n        this.setState({ selectedTrack: track, trackFeatures: features })\n        \n    }\n\n\n    render(){\n        let tracks\n        let features = this.state.features\n         \n        if(this.state.tracks.length != 0){\n\n            \n            tracks = this.state.tracks.map((ele, i) => {\n                let minutes = Math.floor((ele.duration_ms / 1000) / 60).toString()\n                let seconds = Math.floor((ele.duration_ms / 1000) % 60)\n                seconds = (seconds < 10) ? `0${seconds.toString()}` : seconds.toString()\n                const style = \"\"\n                return (\n                    <li id={ele.id} key={ele.id} onClick={() => this.propagateTrackData(ele, features[i], ele.id)} className={style}>\n                        <div className=\"track-div\">\n                            <div className=\"album-div\">\n                                <img className=\"album-art\" src={ele.album.images[0].url} alt=\"album art\"></img>\n                                <div className=\"song-info\">\n                                    <p className='song-title'>\"{ele.name}\"</p>\n                                    <p className=\"artist-name\">{ele.artists[0].name}</p>\n                                </div>\n                            </div>\n                            <div className=\"song-data\">\n                                <p className=\"song-title\"> {minutes}:{seconds}</p>\n                            </div>\n\n                        </div>\n                    </li>)\n            })\n            document.getElementById('search-result').classList.remove('hidden')\n           \n        }\n        \n        return(\n            <div>\n                <div className=\"search-bar\">\n                    <h1>Search Tracks:</h1>\n                    <form action=\"search\" onSubmit={(e) => this.submitSearch(e)}>\n                        <input type=\"text\" name=\"search\" id=\"search\" onChange={this.updateForm()} />\n                    </form>\n                </div>\n                <div className=\"search-tracklist-section hidden\" id=\"search-result\">\n                \n                \n            \n                    \n                        <div className=\"search-tracks-container\">\n                            <h1>Search Results:</h1>\n                            <ul className=\"search-track-ul\">\n                                {tracks}\n                            </ul>\n                        </div>\n             \n\n                    \n                    <div className=\"search-track-show-container\">\n\n                        <SingleTrackData track={this.state.selectedTrack} trackFeatures={this.state.trackFeatures} />\n                    </div>\n                \n            </div>\n            </div>\n        )\n    }\n}\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":112,"column":13,"nodeType":"131","endLine":112,"endColumn":44},{"ruleId":"132","severity":1,"message":"133","line":128,"column":13,"nodeType":"131","endLine":128,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":147,"column":17,"nodeType":"131","endLine":147,"endColumn":93},{"ruleId":"134","severity":1,"message":"135","line":148,"column":17,"nodeType":"131","endLine":148,"endColumn":73},{"ruleId":"134","severity":1,"message":"135","line":149,"column":17,"nodeType":"131","endLine":149,"endColumn":73},{"ruleId":"134","severity":1,"message":"135","line":153,"column":19,"nodeType":"131","endLine":153,"endColumn":100},{"ruleId":"134","severity":1,"message":"135","line":154,"column":19,"nodeType":"131","endLine":154,"endColumn":74},{"ruleId":"134","severity":1,"message":"135","line":155,"column":19,"nodeType":"131","endLine":155,"endColumn":74},{"ruleId":"136","severity":1,"message":"137","line":5,"column":1,"nodeType":"138","endLine":25,"endColumn":3},{"ruleId":"129","severity":1,"message":"130","line":18,"column":13,"nodeType":"131","endLine":18,"endColumn":52},{"ruleId":"136","severity":1,"message":"139","line":12,"column":1,"nodeType":"138","endLine":29,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":9,"column":1,"nodeType":"138","endLine":24,"endColumn":2},{"ruleId":"140","severity":1,"message":"141","line":16,"column":22,"nodeType":"142","messageId":"143","endLine":16,"endColumn":24},{"ruleId":"125","severity":1,"message":"144","line":39,"column":15,"nodeType":"127","messageId":"128","endLine":39,"endColumn":21},{"ruleId":"125","severity":1,"message":"145","line":40,"column":15,"nodeType":"127","messageId":"128","endLine":40,"endColumn":20},{"ruleId":"125","severity":1,"message":"146","line":66,"column":15,"nodeType":"127","messageId":"128","endLine":66,"endColumn":28},{"ruleId":"125","severity":1,"message":"147","line":67,"column":15,"nodeType":"127","messageId":"128","endLine":67,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":7,"column":1,"nodeType":"138","endLine":115,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":1,"column":1,"nodeType":"138","endLine":14,"endColumn":2},{"ruleId":"121","replacedBy":"148"},{"ruleId":"123","replacedBy":"149"},{"ruleId":"136","severity":1,"message":"137","line":4,"column":1,"nodeType":"138","endLine":100,"endColumn":2},{"ruleId":"140","severity":1,"message":"150","line":5,"column":15,"nodeType":"142","messageId":"143","endLine":5,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":21,"column":32,"nodeType":"142","messageId":"143","endLine":21,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":21,"column":82,"nodeType":"142","messageId":"143","endLine":21,"endColumn":84},{"ruleId":"140","severity":1,"message":"141","line":36,"column":30,"nodeType":"142","messageId":"143","endLine":36,"endColumn":32},{"ruleId":"140","severity":1,"message":"141","line":79,"column":37,"nodeType":"142","messageId":"143","endLine":79,"endColumn":39},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'keyArr' is assigned a value but never used.","'modes' is assigned a value but never used.","'selectedTrack' is assigned a value but never used.","'trackFeatures' is assigned a value but never used.",["151"],["152"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]